【 خلاصه توضیحات برای TSP و Bitmask DP براساس کد کاربر 】

---

⚡ TSP کلاسیک:
> فروشنده‌ای باید از همه شهرها یک بار عبور کند و به مبدا برگردد به طوری که هزینه/مسافت کمترین باشد.

---

✨ Bitmask چیست؟
> کار با عدد دودویی برای نمایش وضعیت (مثلا بازدید شهرها).

| عملیات | کد |
|---|---|
| چک بازدید | (mask & (1 << i)) != 0 |
| اضافه کردن | mask | (1 << i) |
| حذف کردن | mask & ~(1 << i) |

---

✨ Bitmask DP برای TSP در کد کاربر:

1. `dp[curr][mask]` : کمترین زمان/هزینه تا این وضعیت.
2. مقداردهی اولیه: شروع از مکان start.
3. انتقال حالت: اضافه کردن مکان next با `newMask = mask | (1 << next)`.
4. رعایت محدودیت زمانی: `newTime <= timeLimit`
5. بازسازی مسیر: با `parent[curr][mask]`.

---

✨ Floyd-Warshall در اول کار:
> ابتدا همه کوتاه‌ترین مسیرها بین هر جفت مکان محاسبه میشود تا در DP مسیر غیربهینی نماند.

---

✨ جمع‌بندی نهایی:
- Bitmask = انتساب مقام بیتی به مکان‌ها.
- Bitmask DP = حل حالت‌های بازدید شهرها با زمان کم و دقت بالا.
- Floyd-Warshall = مطمئن شدن از کوتاه‌ترین مسیرها.
- محدودیت زمانی = افزودن constraint واقعی به مسئله.

---

🔥 نتیجه:
> کاربر یک حل بسیار مقدری و قوی برای TSP با محدودیت زمانی ارائه داده است. ✨👌

